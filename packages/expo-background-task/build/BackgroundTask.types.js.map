{"version":3,"file":"BackgroundTask.types.js","sourceRoot":"","sources":["../src/BackgroundTask.types.ts"],"names":[],"mappings":"AAAA,cAAc;AACd,MAAM,CAAN,IAAY,oBASX;AATD,WAAY,oBAAoB;IAC9B;;OAEG;IACH,2EAAc,CAAA;IACd;;OAEG;IACH,yEAAa,CAAA;AACf,CAAC,EATW,oBAAoB,KAApB,oBAAoB,QAS/B;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,kBASX;AATD,WAAY,kBAAkB;IAC5B;;OAEG;IACH,mEAAY,CAAA;IACZ;;OAEG;IACH,iEAAW,CAAA;AACb,CAAC,EATW,kBAAkB,KAAlB,kBAAkB,QAS7B;AAsBD;;GAEG;AACH,MAAM,CAAN,IAAY,wBAqBX;AArBD,WAAY,wBAAwB;IAClC;;OAEG;IACH,+EAAY,CAAA;IACZ;;OAEG;IACH,6EAAW,CAAA;IACX;;OAEG;IACH,2EAAU,CAAA;IACV;;OAEG;IACH,iFAAa,CAAA;IACb;;OAEG;IACH,6EAAW,CAAA;AACb,CAAC,EArBW,wBAAwB,KAAxB,wBAAwB,QAqBnC","sourcesContent":["// @needsAudit\nexport enum BackgroundTaskStatus {\n  /**\n   * Background updates are unavailable.\n   */\n  Restricted = 1,\n  /**\n   * Background updates are available for the app.\n   */\n  Available = 2,\n}\n\n/**\n * Type of background task.\n */\nexport enum BackgroundTaskType {\n  /**\n   * Task will be executed periodically.\n   */\n  Periodic = 1,\n  /**\n   * Task will be executed only once.\n   */\n  OneTime = 2,\n}\n\n/**\n * Options for scheduling a background task.\n */\nexport interface BackgroundTaskOptions {\n  /**\n   * Type of background task\n   */\n  type: BackgroundTaskType;\n  /**\n   * Interval in minutes - only for periodic tasks.\n   * Minimum interval is 15 minutes.\n   */\n  intervalMinutes?: number;\n}\n\n/**\n * Defines the callback type for a background task.\n */\nexport type BackgroundTaskExecutor = () => Promise<void>;\n\n/**\n * Defines the different statuses for a background task log item\n */\nexport enum BackgroundTaskInfoStatus {\n  /**\n   * The task has been enqueued and is waiting to run\n   */\n  Enqueued = 1,\n  /**\n   * The task has been successfully executed\n   */\n  Success = 2,\n  /**\n   * The task has failed\n   */\n  Failed = 3,\n  /**\n   * Task was cancelled\n   */\n  Cancelled = 4,\n  /**\n   * Task was stopped after running as a one-time task\n   */\n  Stopped = 5,\n}\n\n/**\n * Defines the serialized information about a background task run.\n */\nexport type BackgroundTaskLogEntry = {\n  /**\n   * Task identifier\n   */\n  identifier: string;\n  /**\n   * The date and time when the task was started\n   */\n  date: number;\n  /**\n   * Number of milliseconds the task took to run\n   */\n  duration: number;\n  /**\n   * The status of the task after it was run\n   */\n  status: BackgroundTaskInfoStatus;\n  /**\n   * Serialized error message if the task failed\n   */\n  error?: string;\n};\n\n/**\n * Defines the serialized information about a background task.\n */\nexport type BackgroundTaskInfo = {\n  /**\n   * Identifier of the task\n   */\n  taskIdentifier: string;\n  /**\n   * Task type - periodic or one-time\n   */\n  type: BackgroundTaskType;\n  /**\n   * Interval in minutes - only for periodic tasks.\n   * Minimum interval is 15 minutes.\n   */\n  intervalMinutes: number;\n};\n"]}